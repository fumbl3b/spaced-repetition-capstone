{"version":3,"sources":["services/token-service.js","services/idle-service.js","config.js","services/auth-api-service.js","contexts/UserContext.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/PublicOnlyRoute/PublicOnlyRoute.js","components/Form/Form.js","components/Button/Button.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationRoute/RegistrationRoute.js","components/LoginForm/LoginForm.js","routes/LoginRoute/LoginRoute.js","routes/DashboardRoute/DashboardRoute.js","routes/LearningRoute/LearningRoute.js","routes/NotFoundRoute/NotFoundRoute.js","components/App/App.js","serviceWorker.js","index.js"],"names":["_timeoutId","config","API_ENDPOINT","process","TOKEN_KEY","TokenService","saveAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","jwtDecode","parseAuthToken","authToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","AuthApiService","postUser","user","fetch","concat","method","headers","content-type","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","_ref","username","password","err","refreshToken","authorization","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","UserContext","React","createContext","error","setError","clearError","setUser","processLogin","processLogout","UserProvider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","setState","jwtPayload","id","user_id","name","sub","fetchRefreshToken","logoutBecauseIdle","idle","catch","state","inherits","createClass","key","value","_this2","react_default","a","createElement","Provider","children","Component","Header","handleLogoutClick","context","Link","onClick","to","renderLogoutLink","renderLoginLink","contextType","PrivateRoute","component","objectWithoutProperties","Route","assign","render","componentProps","contexts_UserContext","Consumer","userContext","Redirect","pathname","from","location","PublicOnlyRoute","Label","className","cx","Input","forwardRef","_ref2","ref","type","Required","_ref3","Button","RegistrationForm","firstInput","createRef","handleSubmit","preventDefault","_ev$target","target","onRegistrationSuccess","current","focus","onSubmit","role","htmlFor","required","components_Button_Button","defaultProps","RegistrationRoute","handleRegistrationSuccess","history","push","components_RegistrationForm_RegistrationForm","LoginForm","onLoginSuccess","LoginRoute","handleLoginSuccess","_this$props","destination","components_LoginForm_LoginForm","DashboardRoute","language","words","data","map","item","idx","original","pronounciation","correct_count","incorrect_count","score","total_score","href","listWords","LearningRoute","head","guess","showInput","totalScore","init","fetchHead","resJson","updateGuess","submitGuess","postGuess","answer","val","generateWord","nextWord","onChange","wordCorrectCount","wordIncorrectCount","updateDisplay","displayWrong","isCorrect","nexWord","NotFoundRoute","App","hasError","components_Header_Header","Switch","exact","path","Boolean","hostname","match","ReactDOM","BrowserRouter","UserContext_UserProvider","App_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0e52b18.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode'\nimport config from '../config'\n\nlet _timeoutId\nconst _TEN_SECONDS_IN_MS = 10000\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt)\n  },\n  parseAuthToken() {\n    const authToken = TokenService.getAuthToken()\n    if (authToken)\n      return TokenService.parseJwt(authToken)\n    else\n      return undefined\n  },\n  _getMsUntilExpiry(payload) {\n    return (payload.exp * 1000) - Date.now()\n  },\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.parseAuthToken()\n    )\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId)\n  },\n}\n\nexport default TokenService\n","\nlet _timeoutId\nlet _idleCallback = null\nlet _notIdleEvents = [\n  'mousedown',\n  'mousemove',\n  'keypress',\n  'scroll',\n  'touchstart',\n]\nconst _FIVE_MINUTES_IN_MS = 5 * 60 * 1000\n\nconst IdleService = {\n  setIdleCallback(idleCallback) {\n    _idleCallback = idleCallback\n  },\n  resetIdleTimer(ev) {\n    clearTimeout(_timeoutId)\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS)\n  },\n  regiserIdleTimerResets() {\n    _notIdleEvents.forEach(event =>\n      document.addEventListener(\n        event,\n        IdleService.resetIdleTimer,\n        true,\n      )\n    )\n  },\n  unRegisterIdleResets() {\n    clearTimeout(_timeoutId)\n    _notIdleEvents.forEach(event =>\n      document.removeEventListener(\n        event,\n        IdleService.resetIdleTimer,\n        true,\n      )\n    )\n  },\n}\n\nexport default IdleService\n","export default {\n  API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'http://localhost:8000/api',\n  TOKEN_KEY: process.env.REACT_APP_TOKEN_KEY || 'spaced-repetition-jwt-secret',\n}\n","import config from '../config'\nimport TokenService from './token-service'\n\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/user`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postLogin({ username, password }) {\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n  refreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth/token`, {\n      method: 'PUT',\n      headers: {\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n}\n\nexport default AuthApiService\n","import React, { Component } from 'react'\nimport AuthApiService from '../services/auth-api-service'\nimport TokenService from '../services/token-service'\nimport IdleService from '../services/idle-service'\n\nconst UserContext = React.createContext({\n  user: {},\n  error: null,\n  setError: () => {},\n  clearError: () => {},\n  setUser: () => {},\n  processLogin: () => {},\n  processLogout: () => {},\n})\n\nexport default UserContext\n\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props)\n    const state = { user: {}, error: null }\n\n    const jwtPayload = TokenService.parseAuthToken()\n\n    if (jwtPayload)\n      state.user = {\n        id: jwtPayload.user_id,\n        name: jwtPayload.name,\n        username: jwtPayload.sub,\n      }\n\n    this.state = state;\n    IdleService.setIdleCallback(this.logoutBecauseIdle)\n  }\n\n  componentDidMount() {\n    if (TokenService.hasAuthToken()) {\n      IdleService.regiserIdleTimerResets()\n      TokenService.queueCallbackBeforeExpiry(() => {\n        this.fetchRefreshToken()\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    IdleService.unRegisterIdleResets()\n    TokenService.clearCallbackBeforeExpiry()\n  }\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  setUser = user => {\n    this.setState({ user })\n  }\n\n  processLogin = authToken => {\n    TokenService.saveAuthToken(authToken)\n    const jwtPayload = TokenService.parseAuthToken()\n    this.setUser({\n      id: jwtPayload.user_id,\n      name: jwtPayload.name,\n      username: jwtPayload.sub,\n    })\n    IdleService.regiserIdleTimerResets()\n    TokenService.queueCallbackBeforeExpiry(() => {\n      this.fetchRefreshToken()\n    })\n  }\n\n  processLogout = () => {\n    TokenService.clearAuthToken()\n    TokenService.clearCallbackBeforeExpiry()\n    IdleService.unRegisterIdleResets()\n    this.setUser({})\n  }\n\n  logoutBecauseIdle = () => {\n    TokenService.clearAuthToken()\n    TokenService.clearCallbackBeforeExpiry()\n    IdleService.unRegisterIdleResets()\n    this.setUser({ idle: true })\n  }\n\n  fetchRefreshToken = () => {\n    AuthApiService.refreshToken()\n      .then(res => {\n        TokenService.saveAuthToken(res.authToken)\n        TokenService.queueCallbackBeforeExpiry(() => {\n          this.fetchRefreshToken()\n        })\n      })\n      .catch(err => {\n        this.setError(err)\n      })\n  }\n\n  render() {\n    const value = {\n      user: this.state.user,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setUser: this.setUser,\n      processLogin: this.processLogin,\n      processLogout: this.processLogout,\n    }\n    return (\n      <UserContext.Provider value={value}>\n        {this.props.children}\n      </UserContext.Provider>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport TokenService from '../../services/token-service'\nimport UserContext from '../../contexts/UserContext'\nimport './Header.css'\n\nclass Header extends Component {\n  static contextType = UserContext\n\n  handleLogoutClick = () => {\n    this.context.processLogout()\n  }\n\n  renderLogoutLink() {\n    return (\n      <div>\n        <span>\n          {this.context.user.name}\n        </span>\n        <nav>\n          <Link\n            onClick={this.handleLogoutClick}\n            to='/login'>\n            Logout\n          </Link>\n        </nav>\n      </div>\n    )\n  }\n\n  renderLoginLink() {\n    return (\n      <nav>\n        <Link to='/login'>Login</Link>\n        {' '}\n        <Link to='/register'>Sign up</Link>\n      </nav>\n    )\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>\n          <Link to='/'>\n            Spaced repetition\n          </Link>\n        </h1>\n        {TokenService.hasAuthToken()\n          ? this.renderLogoutLink()\n          : this.renderLoginLink()}\n      </header>\n    );\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport UserContext from '../../contexts/UserContext'\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        <UserContext.Consumer>\n          {userContext =>\n            !!userContext.user.id\n              ? <Component {...componentProps} />\n              : (\n                <Redirect\n                  to={{\n                    pathname: userContext.user.idle ? '/login' : '/register',\n                    state: { from: componentProps.location },\n                  }}\n                />\n              )\n          }\n        </UserContext.Consumer>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport UserContext from '../../contexts/UserContext'\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        <UserContext.Consumer>\n          {userContext =>\n            !!userContext.user.id\n              ? <Redirect to={'/'} />\n              : <Component {...componentProps} />\n          }\n        </UserContext.Consumer>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport './Form.css'\n\nexport function Label({ className, ...props }) {\n  return (\n    <label className={cx('Label', className)} {...props} />\n  )\n}\n\nexport const Input =  React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <input className={cx('Input', className)} type='text' ref={ref} {...props} />\n  )\n})\n\nexport function Required({ className, ...props }) {\n  return (\n    <span className={cx('Required', className)} {...props}>\n      &#42;\n    </span>\n  )\n}\n\nexport function Textarea({ className, ...props }) {\n  return (\n    <textarea className={cx('Textarea', className)} {...props} />\n  )\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport './Button.css'\n\nconst Button = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <button className={cx('Button', className)} ref={ref} {...props} />\n  )\n})\n\nexport default Button\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Input, Required, Label } from '../Form/Form'\nimport AuthApiService from '../../services/auth-api-service'\nimport Button from '../Button/Button'\nimport './RegistrationForm.css'\n\nclass RegistrationForm extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => { }\n  }\n\n  state = { error: null }\n\n  firstInput = React.createRef()\n\n  handleSubmit = ev => {\n    ev.preventDefault()\n    const { name, username, password } = ev.target\n    AuthApiService.postUser({\n      name: name.value,\n      username: username.value,\n      password: password.value,\n    })\n      .then(user => {\n        name.value = ''\n        username.value = ''\n        password.value = ''\n        this.props.onRegistrationSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  }\n\n  componentDidMount() {\n    this.firstInput.current.focus()\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <div role='alert'>\n          {error && <p>{error}</p>}\n        </div>\n        <div>\n          <Label htmlFor='registration-name-input'>\n            Enter your name<Required />\n          </Label>\n          {'  '}\n          <Input\n            ref={this.firstInput}\n            id='registration-name-input'\n            name='name'\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor='registration-username-input'>\n            Choose a username<Required />\n          </Label>\n          {'  '}\n          <Input\n            id='registration-username-input'\n            name='username'\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor='registration-password-input'>\n            Choose a password<Required />\n          </Label>\n          {'  '}\n          <Input\n            id='registration-password-input'\n            name='password'\n            type='password'\n            required\n          />\n        </div>\n        <footer>\n          <Button type='submit'>\n            Sign up\n          </Button>\n          {' '}\n          <Link to='/login'>Already have an account?</Link>\n        </footer>\n      </form>\n    )\n  }\n}\n\nexport default RegistrationForm\n","import React, { Component } from 'react'\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm'\n\nclass RegistrationRoute extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleRegistrationSuccess = () => {\n    const { history } = this.props\n    history.push('/login')\n  }\n\n  render() {\n    return (\n      <section>\n        <p>\n          Practice learning a language with the spaced reptition revision technique.\n        </p>\n        <h2>Sign up</h2>\n        <RegistrationForm\n          onRegistrationSuccess={this.handleRegistrationSuccess}\n        />\n      </section>\n    );\n  }\n}\n\nexport default RegistrationRoute\n","import React, { Component } from 'react'\nimport { Input, Label } from '../Form/Form'\nimport AuthApiService from '../../services/auth-api-service'\nimport UserContext from '../../contexts/UserContext'\nimport Button from '../Button/Button'\n\nclass LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => { }\n  }\n\n  static contextType = UserContext\n\n  state = { error: null }\n\n  firstInput = React.createRef()\n\n  handleSubmit = ev => {\n    ev.preventDefault()\n    const { username, password } = ev.target\n\n    this.setState({ error: null })\n\n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value,\n    })\n      .then(res => {\n        username.value = ''\n        password.value = ''\n        this.context.processLogin(res.authToken)\n        this.props.onLoginSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  }\n\n  componentDidMount() {\n    this.firstInput.current.focus()\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='LoginForm'\n        onSubmit={this.handleSubmit}\n      >\n        <div role='alert'>\n          {error && <p>{error}</p>}\n        </div>\n        <div>\n          <Label htmlFor='login-username-input'>\n            Username\n          </Label>\n          {'  '}\n          <Input\n            ref={this.firstInput}\n            id='login-username-input'\n            name='username'\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor='login-password-input'>\n            Password\n          </Label>\n          {'  '}\n          <Input\n            id='login-password-input'\n            name='password'\n            type='password'\n            required\n          />\n        </div>\n        <Button type='submit'>\n          Login\n        </Button>\n      </form>\n    )\n  }\n}\n\nexport default LoginForm\n","import React, { Component } from 'react'\nimport LoginForm from '../../components/LoginForm/LoginForm'\n\nclass LoginRoute extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => { },\n    },\n  }\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/'\n    history.push(destination)\n  }\n\n  render() {\n    return (\n      <section>\n        <h2>Login</h2>\n        <LoginForm\n          onLoginSuccess={this.handleLoginSuccess}\n        />\n      </section>\n    );\n  }\n}\n\nexport default LoginRoute\n","import React, { Component } from 'react'\nimport config from '../../config'\nimport TokenService from '../../services/token-service'\nimport './DashboardRoute.css'\n\nclass DashboardRoute extends Component {\n  state = {\n    language: {},\n    words: [],\n  };\n\n  componentDidMount() {\n    return fetch(`${config.API_ENDPOINT}/language`, {\n      headers: {\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return res.json().then((e) => Promise.reject(e));\n        }\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({\n          language: data.language,\n          words: data.words,\n        });\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  }\n\n  listWords() {\n    let language = this.state.language.name;\n    return this.state.words.map((item, idx) => {\n      return (\n        <li key={idx} className='word'>\n          {/* <p>{language}</p> */}\n          <h4 className='foreign'>{item.original}</h4>\n          <h5>{item.pronounciation}</h5>\n          <p>correct answer count: {item.correct_count}</p>\n          <p>incorrect answer count: {item.incorrect_count}</p>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const language = this.state.language.name;\n    let score = this.state.language.total_score;\n\n    return (\n      // <main>\n      <section>\n        <div className='container'>\n          <h2>Let's learn {language}</h2>\n          <h4>Total correct answers: {score} </h4>\n          <a href=\"/learn\">Start practicing</a>\n          <h3>Words to practice</h3>\n        <ul className='word-container'>\n          {this.listWords()}\n        </ul>\n        </div>\n      </section>\n      // </main>\n    );\n  }\n}\n\nexport default DashboardRoute\n","import { faTheaterMasks } from '@fortawesome/free-solid-svg-icons'\nimport React, { Component } from 'react'\nimport config from '../../config'\nimport TokenService from '../../services/token-service'\n\nclass LearningRoute extends Component {\n  state = {\n    head:{},\n    guess: '',\n    showInput: false,\n    res: {},\n    totalScore: 0,\n    init: true\n  }\n\n  fetchHead = () => {\n    return fetch(`${config.API_ENDPOINT}/language/head`, {\n      headers: {\n        authorization: `bearer ${TokenService.getAuthToken()}`\n      }\n    })\n    .then((res) => {\n      if(!res.ok) {\n        return res.json().then((e) => Promise.reject(e));\n      }\n      return res.json();\n    })\n    .then(resJson => {\n      this.setState({\n        head: resJson,\n        totalScore: resJson.totalScore //there may be an issue here\n      })\n    })\n  }\n\n  updateGuess = e => {\n    this.setState({\n      guess: e.target.value\n    })\n  }\n\n  submitGuess = e => {\n    e.preventDefault()\n    let guess = this.state.guess\n    let res = this.state.res\n    this.postGuess(guess)\n      .then(() => {\n        if (guess !== res.answer) {\n          this.setState({\n            showInput: true,\n            totalScore: res.totalScore\n          })\n        }\n      })\n  }\n\n  postGuess = (val) => {\n    let guess = JSON.stringify({ val })\n    return fetch(`${config.API_ENDPOINT}/language/guess`, {\n      method: \"POST\",\n      headers: {\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n        'content-type': \"application/json\"\n      },\n      body: guess\n    })\n    .then(res => {\n      if (!res.ok) {\n        return res.json().then((e) => Promise.reject(e))\n      }\n      return res.json()\n    })\n    .then(resJson => {\n      this.setState({\n        res: resJson,\n        totalScore: resJson.totalScore\n      })\n    })\n    .catch(error => {\n      console.error({ error })\n    })\n  }\n\n  generateWord = () => {\n    if (this.state.init === true) {\n      this.setState({\n        init: false\n      })\n      this.fetchHead()\n    }\n\n    let data = this.state.head\n    \n    if (this.state.showInput === false) {\n      return (\n        <div>\n          <div className='word'>\n          <h2>Translate the word:</h2>\n          <span>{data.nextWord}</span><br/>\n          <span>{data.pronounciation}</span>\n          <br/>\n          </div>\n          <form onSubmit={this.submitGuess}>\n              <label htmlFor='learn-guess-input'>What's the translation for this word?</label>\n              <input id='learn-guess-input' type='text' onChange={this.updateGuess} required></input>\n              <button type='submit'>Submit your answer</button>\n            </form>\n          <p>Your total score is: {data.totalScore}</p>\n          <main>\n            <p>You have answered this word correctly {data.wordCorrectCount} times.</p>\n            <p>You have answered this word incorrectly {data.wordIncorrectCount} times.</p>\n            \n          </main>\n        </div>\n      )\n    } else {\n      return (\n        <main>\n          <form onSubmit={this.updateDisplay}></form>\n        </main>\n      )\n    }\n  }\n\n  updateDisplay = (e) => {\n    this.setState({\n      showInput: false,\n      head: this.state.res\n    })\n  }\n\n  displayWrong = () => {\n    if(this.state.showInput === true) {\n      if(this.state.res.isCorrect === false) {\n        return (\n          <div>\n            <div>\n              <p>Your total score is: {this.state.res.totalScore}</p>\n              <h2>Good try, but not quite right :(</h2>\n            </div>\n            <div>\n              <p>The correct translation for {this.state.head.nexWord} was {this.state.res.answer} and you chose {this.state.guess}!</p>\n            </div>\n            <button>Try another word!</button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <div>\n              <p>Your total score is {this.state.totalScore}</p>\n              <h2>You were correct! :D</h2>\n            </div>\n            <div>\n              <p>The correct translation for {this.state.head.nexWord} was {this.state.res.answer} and you chose {this.state.guess}!</p>\n            </div>\n            <button>Try another word!</button>\n          </div>\n        )\n      }\n    } else {\n      return ''\n    }\n  }\n\n  render() {\n    return (\n      <section>\n        {this.generateWord()}\n      </section>\n    );\n  }\n}\n\nexport default LearningRoute\n","import React, { Component } from 'react'\n\nclass NotFoundRoute extends Component {\n  render() {\n    return (\n      <section>\n        <h2>404 - Page not found</h2>\n        <p>Try going back to your previous page.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFoundRoute\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Header from '../Header/Header'\nimport PrivateRoute from '../PrivateRoute/PrivateRoute'\nimport PublicOnlyRoute from '../PublicOnlyRoute/PublicOnlyRoute'\nimport RegistrationRoute from '../../routes/RegistrationRoute/RegistrationRoute'\nimport LoginRoute from '../../routes/LoginRoute/LoginRoute'\nimport DashboardRoute from '../../routes/DashboardRoute/DashboardRoute'\nimport LearningRoute from '../../routes/LearningRoute/LearningRoute'\nimport NotFoundRoute from '../../routes/NotFoundRoute/NotFoundRoute'\nimport './App.css'\n\nexport default class App extends Component {\n  state = { hasError: false }\n\n  static getDerivedStateFromError(error) {\n    console.error(error)\n    return { hasError: true }\n  }\n\n  render() {\n    const { hasError } = this.state\n    return (\n      <div className='App'>\n        <Header />\n        <main>\n          {hasError && (\n            <p>There was an error! Oh no!</p>\n          )}\n          <Switch>\n            <PrivateRoute\n              exact\n              path={'/'}\n              component={DashboardRoute}\n            />\n            <PrivateRoute\n              path={'/learn'}\n              component={LearningRoute}\n            />\n            <PublicOnlyRoute\n              path={'/register'}\n              component={RegistrationRoute}\n            />\n            <PublicOnlyRoute\n              path={'/login'}\n              component={LoginRoute}\n            />\n            <Route\n              component={NotFoundRoute}\n            />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'unfetch/polyfill'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { UserProvider } from './contexts/UserContext'\nimport App from './components/App/App'\nimport './setup-icons'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}